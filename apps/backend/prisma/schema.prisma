generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  phone           String           @unique
  isDormResident  Boolean
  roomNumber      String
  role            Role
  bandMemberships BandMembership[]
  cardRight       CardRight?
  profilePicture  ProfilePicture?
  gateKeeping     Reservation[]    @relation("GateKeeping")
  reservations    Reservation[]    @relation("Reservations")
}

model ProfilePicture {
  id           Int    @id @default(autoincrement())
  userId       Int    @unique
  mimeType     String
  profileImage Bytes
  user         User   @relation(fields: [userId], references: [id])
}

model CardRight {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
}

model Reservation {
  id           Int               @id @default(autoincrement())
  userId       Int?
  bandId       Int?
  startTime    DateTime
  endTime      DateTime
  gateKeeperId Int?
  status       ReservationStatus
  band         Band?             @relation(fields: [bandId], references: [id])
  gateKeeper   User?             @relation("GateKeeping", fields: [gateKeeperId], references: [id])
  user         User?             @relation("Reservations", fields: [userId], references: [id])
}

model Band {
  id           Int              @id @default(autoincrement())
  name         String
  email        String?
  webPage      String?
  description  String?
  genres       String[]
  members      BandMembership[]
  reservations Reservation[]
}

model BandMembership {
  id     Int                  @id @default(autoincrement())
  userId Int?
  bandId Int?
  status BandMembershipStatus @default(PENDING)
  band   Band?                @relation(fields: [bandId], references: [id])
  user   User?                @relation(fields: [userId], references: [id])
}

model Comment {
  id           Int      @id @default(autoincrement())
  comment      String
  startTime    DateTime
  endTime      DateTime
  isReservable Boolean  @default(false)
}

model Period {
  id        Int      @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
}

enum Role {
  USER
  GATEKEEPER
  ADMIN
}

enum ReservationStatus {
  OVERTIME
  NORMAL
}

enum BandMembershipStatus {
  PENDING
  ACCEPTED
}
